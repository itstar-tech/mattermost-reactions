version: '3.7'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mattermost

  # Servidor Mattermost
  mattermost:
    image: mattermost/mattermost-team-edition:latest
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8065:8065"
    environment:
      # Database settings
      MM_SQLSETTINGS_DRIVERNAME: postgres
      MM_SQLSETTINGS_DATASOURCE: "postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable&connect_timeout=10"

      # Server settings
      MM_SERVICESETTINGS_SITEURL: "http://localhost:8065"
      MM_SERVICESETTINGS_ENABLEDEVELOPER: "true"
      MM_SERVICESETTINGS_ENABLEINSECUREOUTGOINGCONNECTIONS: "true"
      MM_SERVICESETTINGS_ALLOWCORSFROMANYWHERE: "true"
      MM_SERVICESETTINGS_ENABLEGIFPICKER: "true"

      # File settings
      MM_FILESETTINGS_ENABLEPUBLICLINK: "true"

      # Plugin settings
      MM_PLUGINSETTINGS_ENABLE: "true"
      MM_PLUGINSETTINGS_ENABLEUPLOADS: "true"
      MM_PLUGINSETTINGS_ENABLEREMOTEMARKETPLACE: "false"
      MM_PLUGINSETTINGS_REQUIREPLUGINSIGNATURE: "false"

      # Log settings
      MM_LOGSETTINGS_ENABLECONSOLE: "true"
      MM_LOGSETTINGS_CONSOLELEVEL: "DEBUG"
      MM_LOGSETTINGS_ENABLEFILE: "true"
      MM_LOGSETTINGS_FILELEVEL: "DEBUG"

    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
      - mattermost_config:/mattermost/config
      - mattermost_plugins:/mattermost/plugins
      - ./dist:/mattermost/plugins-dev  # Para cargar nuestro plugin
    networks:
      - mattermost

  # Servidor simple para recibir webhooks de prueba
  webhook-receiver:
    image: node:18-alpine
    restart: unless-stopped
    ports:
      - "3000:3000"
    working_dir: /app
    environment:
      - NODE_ENV=development
    command: >
      sh -c "
        cat > package.json << 'EOF'
        {
          \"name\": \"webhook-receiver\",
          \"version\": \"1.0.0\",
          \"main\": \"server.js\",
          \"scripts\": {
            \"start\": \"node server.js\"
          },
          \"dependencies\": {
            \"express\": \"^4.18.2\"
          }
        }
        EOF

        cat > server.js << 'EOF'
        const express = require('express');
        const app = express();

        app.use(express.json({ limit: '10mb' }));
        app.use(express.urlencoded({ extended: true, limit: '10mb' }));

        // Endpoint para recibir webhooks del plugin
        app.post('/webhook', (req, res) => {
          console.log('\nðŸŽ‰ WEBHOOK RECIBIDO:');
          console.log('Timestamp:', new Date().toISOString());
          console.log('Headers:', JSON.stringify(req.headers, null, 2));
          console.log('Body:', JSON.stringify(req.body, null, 2));
          console.log('================================\n');

          res.status(200).json({
            status: 'received',
            timestamp: new Date().toISOString(),
            data: req.body
          });
        });

        app.get('/health', (req, res) => {
          res.json({
            status: 'OK',
            service: 'webhook-receiver',
            timestamp: new Date().toISOString()
          });
        });

        // Endpoint para mostrar estadÃ­sticas
        app.get('/', (req, res) => {
          res.json({
            service: 'Mattermost Reactions Plugin - Webhook Receiver',
            status: 'running',
            endpoints: [
              'POST /webhook - Receive reaction webhooks',
              'GET /health - Health check',
              'GET / - This info'
            ],
            timestamp: new Date().toISOString()
          });
        });

        const PORT = 3000;
        app.listen(PORT, '0.0.0.0', () => {
          console.log('ðŸš€ Webhook receiver running on port ' + PORT);
          console.log('ðŸ“¡ Main endpoint: http://localhost:' + PORT + '/webhook');
          console.log('ðŸ©º Health check: http://localhost:' + PORT + '/health');
          console.log('ðŸ“Š Info: http://localhost:' + PORT + '/');
        });
        EOF

        npm install && npm start
      "
    networks:
      - mattermost

volumes:
  postgres_data:
  mattermost_data:
  mattermost_logs:
  mattermost_config:
  mattermost_plugins:

networks:
  mattermost:
    driver: bridge
